{"version":3,"sources":["webpack://@the-turk/flarum-mathren/webpack/bootstrap","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/app']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/extend']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/Button']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/TextEditor']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/DiscussionPage']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/CommentPost']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/Fragment']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['components/EditPostComposer']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['components/TextEditor']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/Component']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/DiscussionComposer']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/EditPostComposer']\"","webpack://@the-turk/flarum-mathren/external \"flarum.core.compat['common/components/ReplyComposer']\"","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/copyDelimiters.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/katex2tex.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/getPrimaryDelimiters.js","webpack://@the-turk/flarum-mathren/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-mathren/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/mentions/reply.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/mentions/cleanDisplayName.js","webpack://@the-turk/flarum-mathren/./src/forum/fragments/mentions/PostQuoteButton.js","webpack://@the-turk/flarum-mathren/./src/forum/addPostQuoteButton.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/mentions/selectedText.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/getFlarumComposers.js","webpack://@the-turk/flarum-mathren/./src/forum/components/TextEditorButton.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/splitAtDelimiters.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/delimiterReplacer.js","webpack://@the-turk/flarum-mathren/./src/forum/index.js","webpack://@the-turk/flarum-mathren/./src/forum/addTextEditorButton.js","webpack://@the-turk/flarum-mathren/./src/forum/addCopyListener.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","copyDelimiters","delimiters","inline","left","right","display","block","katexReplaceWithTex","fragment","katexHtml","querySelectorAll","length","element","remove","parentNode","removeChild","katexMathml","texSource","querySelector","replaceWith","replaceChild","innerHTML","displays","substr","getPrimaryDelimiters","forum","reverse","attribute","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","insertMention","post","composer","quote","user","mention","displayName","replace","cleanDisplayName","app","translator","trans","id","fields","content","body","attrs","originalContent","cursorPosition","editor","getSelectionRange","preceding","slice","precedingNewlines","match","insertAtCursor","Array","join","trim","PostQuoteButton","view","class","onclick","bodyMatches","EditPostComposer","discussion","DiscussionControls","replyAction","then","icon","className","show","top","$this","this","$","parentOffset","offsetParent","offset","css","hideHandler","hide","document","on","showStart","window","scrollTop","outerHeight","showEnd","bottom","outerWidth","off","Fragment","addPostQuoteButton","extend","CommentPost","extensions","session","isHidden","canReply","$postBody","$container","button","handler","e","setTimeout","selection","getSelection","rangeCount","parent","getRangeAt","commonAncestorContainer","contains","cloneContents","clone","append","find","alt","src","innerText","href","text","selectedText","render","rects","getClientRects","firstRect","clientY","clientX","lastRect","after","addEventListener","getFlarumComposers","DiscussionComposer","ReplyComposer","TextEditorButton","Dropdown","component","buttonClassName","label","items","toArray","ItemList","add","Button","wrapSelection","displayMode","composerClass","componentClass","indexOf","leftDelim","rightDelim","selectionRange","textEditor","insertAt","replaceBeforeCursor","moveCursorTo","Component","findEndOfMath","delimiter","startIndex","index","braceLevel","delimLength","character","amsRegex","splitAtDelimiters","data","regexLeft","RegExp","map","x","search","push","type","findIndex","delim","startsWith","rawData","math","test","replaceDelimitersInText","options","createDocumentFragment","appendChild","createTextNode","span","createElement","primaryBlockDelimiter","primaryInlineDelimiter","textContent","delimiterReplacer","elem","childNodes","childNode","nodeType","frag","initializers","replaceDelimiters","delimiterReplacerOptions","primaryDelimiters","bbDelimiters","aliasDelimiters","TextEditor","DiscussionPage","event","isCollapsed","html","outerHTML","clipboardData","setData","preventDefault","s9e","TextFormatter","override","original","preview","forEach","vnode","$textarea","dom"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['common/components/DiscussionPage'];","module.exports = flarum.core.compat['common/components/CommentPost'];","module.exports = flarum.core.compat['common/Fragment'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/EditPostComposer'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/components/DiscussionComposer'];","module.exports = flarum.core.compat['common/components/EditPostComposer'];","module.exports = flarum.core.compat['common/components/ReplyComposer'];","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// Define delimiters those will be used in `copy-tex` plugin\n// see https://github.com/KaTeX/KaTeX/blob/master/contrib/copy-tex/katex2tex.js#L1-L5\nexport default function copyDelimiters(delimiters) {\n  return {\n    inline: [delimiters.inline.left, delimiters.inline.right],\n    display: [delimiters.block.left, delimiters.block.right],\n  };\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\n// Replace .katex elements with their TeX source (<annotation> element).\n// Modifies fragment in-place.  Useful for writing your own 'copy' handler,\n// as in copy-tex.js.\nexport const katexReplaceWithTex = function (fragment, copyDelimiters) {\n  // Remove .katex-html blocks that are preceded by .katex-mathml blocks\n  // (which will get replaced below).\n  const katexHtml = fragment.querySelectorAll('.katex-mathml + .katex-html');\n\n  for (let i = 0; i < katexHtml.length; i++) {\n    const element = katexHtml[i];\n\n    if (element.remove) {\n      element.remove(null);\n    } else {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  // Replace .katex-mathml elements with their annotation (TeX source)\n  // descendant, with inline delimiters.\n  const katexMathml = fragment.querySelectorAll('.katex-mathml');\n\n  for (let i = 0; i < katexMathml.length; i++) {\n    const element = katexMathml[i];\n    const texSource = element.querySelector('annotation');\n\n    if (texSource) {\n      if (element.replaceWith) {\n        element.replaceWith(texSource);\n      } else {\n        element.parentNode.replaceChild(texSource, element);\n      }\n\n      texSource.innerHTML = copyDelimiters.inline[0] + texSource.innerHTML + copyDelimiters.inline[1];\n    }\n  }\n\n  // Switch display math to display delimiters.\n  const displays = fragment.querySelectorAll('.katex-display annotation');\n\n  for (let i = 0; i < displays.length; i++) {\n    const element = displays[i];\n\n    element.innerHTML =\n      copyDelimiters.display[0] +\n      element.innerHTML.substr(\n        copyDelimiters.inline[0].length,\n        element.innerHTML.length - copyDelimiters.inline[0].length - copyDelimiters.inline[1].length\n      ) +\n      copyDelimiters.display[1];\n  }\n\n  return fragment;\n};\n\nexport default katexReplaceWithTex;\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Get the primary delimiters that'll be used by text editor buttons,\n * copy-tex plugin, `EditPostComposer` etc.\n *\n * @param forum   Must be equal to `app.forum`. Used for retrieving settings.\n * @param reverse To return the primary BBCode delimiters no matter what.\n *\n * @return { Object }\n */\nexport default function getPrimaryDelimiters(forum, reverse = false) {\n  if (forum.attribute('mathren.aliases_as_primary') && reverse === false) {\n    return {\n      inline: forum.attribute('mathren.primary_inline_delimiter_alias'),\n      block: forum.attribute('mathren.primary_block_delimiter_alias'),\n    };\n  }\n\n  return {\n    inline: forum.attribute('mathren.primary_inline_delimiter'),\n    block: forum.attribute('mathren.primary_block_delimiter'),\n  };\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport EditPostComposer from 'flarum/components/EditPostComposer';\n\nimport cleanDisplayName from './cleanDisplayName';\n\nfunction insertMention(post, composer, quote) {\n  const user = post.user();\n  const mention = `@\"${(user && cleanDisplayName(user)) || app.translator.trans('core.lib.username.deleted_text')}\"#p${post.id()} `;\n\n  // If the composer is empty, then assume we're starting a new reply.\n  // In which case we don't want the user to have to confirm if they\n  // close the composer straight away.\n  if (!composer.fields.content()) {\n    composer.body.attrs.originalContent = mention;\n  }\n\n  const cursorPosition = composer.editor.getSelectionRange()[0];\n  const preceding = composer.fields.content().slice(0, cursorPosition);\n  const precedingNewlines = preceding.length == 0 ? 0 : 3 - preceding.match(/(\\n{0,2})$/)[0].length;\n\n  composer.editor.insertAtCursor(\n    Array(precedingNewlines).join('\\n') + // Insert up to two newlines, depending on preceding whitespace\n      (quote ? '> ' + mention + quote.trim().replace(/\\n/g, '\\n> ') + '\\n\\n' : mention),\n    false\n  );\n}\n\nexport default function reply(post, quote) {\n  if (app.composer.bodyMatches(EditPostComposer) && app.composer.body.attrs.post.discussion() === post.discussion()) {\n    // If we're already editing a post in the discussion of post we're quoting,\n    // insert the mention directly.\n    insertMention(post, app.composer, quote);\n  } else {\n    // The default \"Reply\" action behavior will only open a new composer if\n    // necessary, but it will always be a ReplyComposer, hence the exceptional\n    // case above.\n    DiscussionControls.replyAction.call(post.discussion()).then((composer) => insertMention(post, composer, quote));\n  }\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nexport default function cleanDisplayName(user) {\n  return user.displayName().replace(/\"#[a-z]{0,3}[0-9]+/, '_');\n}\n","/*\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License.\n * See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport Fragment from 'flarum/common/Fragment';\nimport icon from 'flarum/common/helpers/icon';\n\nimport reply from '../../utils/mentions/reply';\n\nexport default class PostQuoteButton extends Fragment {\n  constructor(post) {\n    super();\n\n    this.post = post;\n  }\n\n  view() {\n    return (\n      <button class=\"Button PostQuoteButton\" onclick={() => reply(this.post, this.content)}>\n        {icon('fas fa-quote-left', { className: 'Button-icon' })}\n        {app.translator.trans('flarum-mentions.forum.post.quote_button')}\n      </button>\n    );\n  }\n\n  show(left, top) {\n    const $this = this.$().show();\n    const parentOffset = $this.offsetParent().offset();\n\n    $this.css('left', left - parentOffset.left).css('top', top - parentOffset.top);\n\n    this.hideHandler = this.hide.bind(this);\n    $(document).on('mouseup', this.hideHandler);\n  }\n\n  showStart(left, top) {\n    const $this = this.$();\n\n    this.show(left, $(window).scrollTop() + top - $this.outerHeight() - 5);\n  }\n\n  showEnd(right, bottom) {\n    const $this = this.$();\n\n    this.show(right - $this.outerWidth(), $(window).scrollTop() + bottom + 5);\n  }\n\n  hide() {\n    this.$().hide();\n    $(document).off('mouseup', this.hideHandler);\n  }\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/common/components/CommentPost';\n\nimport copyDelimiters from './utils/katex/copyDelimiters';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\nimport selectedText from './utils/mentions/selectedText';\nimport PostQuoteButton from './fragments/mentions/PostQuoteButton';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'oncreate', function () {\n    // \"flarum-mentions\" is required for showing the Quote button.\n    // Main cause of this, the user may not want to use Quote button Flarum-wide.\n    // If they using \"flarum-mentions\" then they're okay with that button.\n    if (!('flarum-mentions' in flarum.extensions || app.forum.attribute('mathren.enable_copy_tex'))) return;\n\n    const post = this.attrs.post;\n    const user = app.session.user;\n    const delimiters = getPrimaryDelimiters.bind(this, app.forum)();\n\n    if (post.isHidden() || (user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render button into it.\n    const $container = $('<div class=\"MathRen-quoteButtonContainer\"></div>');\n\n    const button = new PostQuoteButton(post);\n\n    const handler = function (e) {\n      setTimeout(() => {\n        const content = selectedText($postBody, copyDelimiters(delimiters));\n\n        if (content) {\n          button.content = content;\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport katexReplaceWithTex from '../katex/katex2tex';\n\nexport default function selectedText(body, copyDelimiters) {\n  const selection = window.getSelection();\n  if (selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      let fragment = selection.getRangeAt(0).cloneContents();\n\n      if (fragment.querySelector('.katex-mathml')) {\n        fragment = katexReplaceWithTex(fragment, copyDelimiters);\n      }\n\n      const clone = $('<div>').append(fragment);\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function () {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function () {\n        return '![](' + this.src + ')';\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function () {\n        return '[' + this.innerText + '](' + this.href + ')';\n      });\n\n      return clone.text();\n    }\n  }\n  return '';\n}\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport DiscussionComposer from 'flarum/common/components/DiscussionComposer';\nimport EditPostComposer from 'flarum/common/components/EditPostComposer';\nimport ReplyComposer from 'flarum/common/components/ReplyComposer';\n\n/**\n * Returns a list of native Flarum composer components.\n * This list will be used to determine if a composer\n * defined by a third-party extension.\n *\n * @return { Array }\n */\nexport default function getFlarumComposers() {\n  return [DiscussionComposer, EditPostComposer, ReplyComposer];\n}\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/common/app';\n\nimport Button from 'flarum/common/components/Button';\nimport Component from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\n\nimport getPrimaryDelimiters from '../utils/katex/getPrimaryDelimiters';\nimport getFlarumComposers from '../utils/getFlarumComposers';\n\nexport default class TextEditorButton extends Component {\n  view() {\n    return Dropdown.component(\n      {\n        className: 'MathRen-buttonsDropdown',\n        buttonClassName: 'Button Button--flat',\n        label: icon('fas fa-square-root-alt'),\n      },\n      this.items().toArray()\n    );\n  }\n\n  /**\n   * Build an item list for the contents of the dropdown menu.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n\n    items.add(\n      'mathren-blockButton',\n      Button.component(\n        {\n          icon: 'fas fa-vector-square',\n          onclick: () => this.wrapSelection(true),\n        },\n        app.translator.trans('the-turk-mathren.forum.composer.block_expression')\n      ),\n      50\n    );\n\n    items.add(\n      'mathren-inlineButton',\n      Button.component(\n        {\n          icon: 'fas fa-grip-lines',\n          onclick: () => this.wrapSelection(),\n        },\n        app.translator.trans('the-turk-mathren.forum.composer.inline_expression')\n      ),\n      0\n    );\n\n    return items;\n  }\n\n  /**\n   * Wrap the current selection with BBCode tags.\n   * If there's no selection, put them around the cursor.\n   *\n   * @param displayMode Whether this button is used for block or inline expressions.\n   */\n  wrapSelection(displayMode = false) {\n    const composerClass = app.composer.body.componentClass;\n\n    // Get primary delimiters based on the `aliases_as_primary` setting.\n    // If this isn't a native Flarum composer (i.e. it created by an extension),\n    // then we will use BBCode delimiters no matter what because we're\n    // replacing alias delimiters on the fly. This causing wrong cursor location.\n    this.delimiters = getPrimaryDelimiters.bind(this, app.forum, getFlarumComposers().indexOf(composerClass) === -1)();\n\n    // opening tag (left delimiter)\n    const leftDelim = displayMode ? this.delimiters.block['left'] : this.delimiters.inline['left'];\n\n    // closing tag (right delimiter)\n    const rightDelim = displayMode ? this.delimiters.block['right'] : this.delimiters.inline['right'];\n\n    const selectionRange = this.attrs.textEditor.getSelectionRange();\n\n    if (selectionRange[0] != selectionRange[1]) {\n      this.attrs.textEditor.insertAt(selectionRange[0], leftDelim);\n      this.attrs.textEditor.insertAt(selectionRange[1] + leftDelim.length, rightDelim);\n    } else {\n      this.attrs.textEditor.replaceBeforeCursor(selectionRange[0], leftDelim + rightDelim);\n      this.attrs.textEditor.moveCursorTo(selectionRange[0] + leftDelim.length);\n    }\n  }\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nconst findEndOfMath = function (delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === '\\\\') {\n      index++;\n    } else if (character === '{') {\n      braceLevel++;\n    } else if (character === '}') {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nconst escapeRegex = function (string) {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nconst amsRegex = /^\\\\begin{/;\n\nconst splitAtDelimiters = function (text, delimiters) {\n  let index;\n  const data = [];\n\n  const regexLeft = new RegExp('(' + delimiters.map((x) => escapeRegex(x.left)).join('|') + ')');\n\n  while (true) {\n    index = text.search(regexLeft);\n    if (index === -1) {\n      break;\n    }\n    if (index > 0) {\n      data.push({\n        type: 'text',\n        data: text.slice(0, index),\n      });\n      text = text.slice(index); // now text starts with delimiter\n    }\n    // ... so this always succeeds:\n    const i = delimiters.findIndex((delim) => text.startsWith(delim.left));\n    index = findEndOfMath(delimiters[i].right, text, delimiters[i].left.length);\n    if (index === -1) {\n      break;\n    }\n    const rawData = text.slice(0, index + delimiters[i].right.length);\n    const math = amsRegex.test(rawData) ? rawData : text.slice(delimiters[i].left.length, index);\n    data.push({\n      type: 'math',\n      data: math,\n      rawData,\n      display: delimiters[i].display,\n    });\n    text = text.slice(index + delimiters[i].right.length);\n  }\n\n  if (text !== '') {\n    data.push({\n      type: 'text',\n      data: text,\n    });\n  }\n\n  return data;\n};\n\nexport default splitAtDelimiters;\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nimport splitAtDelimiters from './splitAtDelimiters';\n\nconst replaceDelimitersInText = function (text, options) {\n  const data = splitAtDelimiters(text, options.splitAtDelimiters);\n\n  if (data.length === 1 && data[0].type === 'text') {\n    // There is no formula in the text.\n    // Let's return null which means there is no need to replace\n    // the current text node with a new one.\n    return null;\n  }\n\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].type === 'text') {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      const span = document.createElement('span');\n      const math = data[i].data;\n      const displayMode = data[i].display === true;\n      const delimiter = displayMode ? options.primaryBlockDelimiter : options.primaryInlineDelimiter;\n\n      span.textContent = delimiter['left'] + math + delimiter['right'];\n\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\n/**\n * We'll match with math expressions and replace their\n * BBCode delimiters `[math]...[/math]` with their aliases `($$...$$)`.\n * This function should only be called when we set the\n * `aliases_as_primary` setting to true from the settings page.\n *\n * @param elem    The element that we are looking for math expressions in it.\n * @param options Contains primary replacer delimiter information.\n *\n * @return { string }\n */\nconst delimiterReplacer = function (elem, options) {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // Text node\n      const frag = replaceDelimitersInText(childNode.textContent, options);\n\n      if (frag) {\n        i += frag.childNodes.length - 1;\n        elem.replaceChild(frag, childNode);\n      }\n    } else if (childNode.nodeType === 1) {\n      delimiterReplacer(childNode, options);\n    }\n    // Otherwise, it's something else, and ignore it.\n  }\n\n  return elem.innerText;\n};\n\nexport default delimiterReplacer;\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend, override } from 'flarum/common/extend';\n\nimport app from 'flarum/common/app';\nimport TextEditor from 'flarum/common/components/TextEditor';\n\nimport addCopyListener from './addCopyListener';\nimport addPostQuoteButton from './addPostQuoteButton';\nimport addTextEditorButton from './addTextEditorButton';\nimport delimiterReplacer from './utils/katex/delimiterReplacer';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\nimport getFlarumComposers from './utils/getFlarumComposers';\n\napp.initializers.add(\n  'the-turk-mathren',\n  () => {\n    /**\n     * Replaces delimiters within a text.\n     *\n     * @param text    Text that has delimiters to replace.\n     *                Might contain line breaks in it.\n     * @param reverse True if we're replacing delimiters from\n     *                BBCode `[math]...[/math]` to aliases `$$...$$`.\n     *\n     * @return { string }\n     **/\n    const replaceDelimiters = (text = '', reverse = false) => {\n      const span = document.createElement('span');\n\n      // using `span.innerText` destroys line breaks\n      span.innerHTML = text;\n\n      return delimiterReplacer(span, delimiterReplacerOptions(reverse));\n    };\n\n    /**\n     * Options those will be used in `delimiterReplacer()` function.\n     *\n     * @param reverse True if we're replacing delimiters from\n     *                BBCode `[math]...[/math]` to aliases `$$...$$`.\n     *\n     * @return { Object }\n     **/\n    const delimiterReplacerOptions = (reverse = false) => {\n      const primaryDelimiters = getPrimaryDelimiters.bind(this, app.forum, !reverse)();\n      const bbDelimiters = app.forum.attribute('mathren.bbcode_delimiters');\n      const aliasDelimiters = app.forum.attribute('mathren.alias_delimiters');\n      const splitAtDelimiters = reverse ? bbDelimiters : aliasDelimiters;\n\n      return {\n        primaryBlockDelimiter: primaryDelimiters.block,\n        primaryInlineDelimiter: primaryDelimiters.inline,\n        splitAtDelimiters,\n      };\n    };\n\n    /**\n     * Show a quote button when post text is selected.\n     *\n     * We have to run KaTeX's copy-tex plugin on the selected post\n     * for returning the source of KaTeX expression when the user clicks\n     * the \"Quote\" button (which comes with the `flarum/mentions` extension).\n     * To achieve that, we need to modify the extension's `selectedText` function.\n     * Doing that from another extension seems not possible at the moment, so\n     * all we do is replicate its \"Quote\" button functions and showing our\n     * button instead of theirs.\n     **/\n    addPostQuoteButton();\n\n    // Add text editor buttons.\n    addTextEditorButton();\n\n    // Hook into global copy handler to modify behavior on `.katex` elements.\n    addCopyListener();\n\n    // Replace alias delimiters with BBCode delimiters in preview mode\n    // so the `TextFormatter` can render them using BBCode definitions.\n    if (s9e && s9e.TextFormatter) {\n      override(s9e.TextFormatter, 'preview', function (original, preview, element) {\n        original(replaceDelimiters(preview), element);\n      });\n    }\n\n    // Replace alias delimiters with BBCode delimiters `onsubmit`\n    // because they must be saved with BBCode delimiters. Keep in mind that\n    // we strictly need BBCode tags (and their `ignoreTags()` method) to support Markdown.\n    getFlarumComposers().forEach((composer) => {\n      override(composer.prototype, 'onsubmit', function (original) {\n        this.composer.fields.content(replaceDelimiters(this.composer.fields.content()));\n        original();\n      });\n    });\n\n    // Replace BBCode delimiters with alias delimiters if `aliases_as_primary` set to true.\n    extend(TextEditor.prototype, 'oncreate', function (original, vnode) {\n      const $textarea = vnode.dom.querySelector('textarea');\n      const composerClass = app.composer.body.componentClass;\n\n      if (getFlarumComposers().indexOf(composerClass) === -1) {\n        // If this isn't a native Flarum composer (i.e. it created by an extension)\n        // then we will replace alias delimiters with BBCode ones on the fly.\n        // Because it seems there is no way to manipulate their `onsubmit` call\n        // as we did for native Flarum composers above.\n        $textarea.addEventListener('input', function () {\n          $textarea.value = replaceDelimiters($textarea.value);\n        });\n      } else {\n        // This is a native Flarum composer and its BBCode delimiters should be\n        // replaced with alias delimiters if `aliases_as_primary` set to true.\n        // This will take effect on the `EditPostComposer` only at this point\n        // because other native composers are empty by default.\n        if (!app.forum.attribute('mathren.aliases_as_primary')) return;\n        $textarea.value = replaceDelimiters(this.value, true);\n      }\n    });\n  },\n  -500 // since we're overriding things...\n);\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/components/TextEditor';\n\nimport TextEditorButton from './components/TextEditorButton';\n\nexport default function addTextEditorButton() {\n  extend(TextEditor.prototype, 'toolbarItems', function (items) {\n    if (app.forum.attribute('mathren.enable_editor_buttons') === true) {\n      items.add('the-turk-mathren', <TextEditorButton textEditor={this.attrs.composer.editor} />);\n    }\n  });\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from 'flarum/common/components/DiscussionPage';\n\nimport copyDelimiters from './utils/katex/copyDelimiters';\nimport katexReplaceWithTex from './utils/katex/katex2tex';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\n\nexport default function addCopyListener() {\n  extend(DiscussionPage.prototype, 'oncreate', function () {\n    if (!app.forum.attribute('mathren.enable_copy_tex')) return;\n\n    const delimiters = getPrimaryDelimiters.bind(this, app.forum)();\n\n    // Global copy handler to modify behavior on .katex elements.\n    document.addEventListener('copy', function (event) {\n      const selection = window.getSelection();\n\n      if (selection.isCollapsed) {\n        return; // default action OK if selection is empty\n      }\n\n      const fragment = selection.getRangeAt(0).cloneContents();\n\n      if (!fragment.querySelector('.katex-mathml')) {\n        return; // default action OK if no .katex-mathml elements\n      }\n\n      // Preserve usual HTML copy/paste behavior.\n      const html = [];\n\n      for (let i = 0; i < fragment.childNodes.length; i++) {\n        html.push(fragment.childNodes[i].outerHTML);\n      }\n\n      event.clipboardData.setData('text/html', html.join(''));\n\n      // Rewrite plain-text version.\n      event.clipboardData.setData('text/plain', katexReplaceWithTex(fragment, copyDelimiters(delimiters)).textContent);\n\n      // Prevent normal copy handling.\n      event.preventDefault();\n    });\n  });\n}\n"],"sourceRoot":""}